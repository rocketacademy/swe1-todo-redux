{"version":3,"sources":["theme.js","reducers/modals.js","reducers/todos.js","reducers/index.js","actions/types.js","util/firebase.js","util/database.js","actions/index.js","components/TodoCard.jsx","components/ScrollToTopButton.jsx","components/CreateTodoDialog.jsx","components/App.jsx","index.jsx"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","background","default","typography","fontFamily","h5","fontWeight","overrides","MuiButton","contained","boxShadow","label","textTransform","MuiCard","root","initialState","openCreateTodoDialog","todos","reducer","combineReducers","modals","state","action","nextState","type","payload","createdTodo","id","Date","getTime","title","description","done","modifiedTodos","slice","push","filter","todo","map","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","_ref","firestore","collection","a","get","then","snapshot","forEach","doc","data","_id","toString","set","delete","currentStatus","update","getTodos","addTodo","deleteTodoWithId","toggleTodoStatusWithId","todoPlaceholder","useStyles","makeStyles","createStyles","opacity","props","width","maxWidth","connect","dispatch","deleteTodoItem","database","Actions","toggleTodoItemStatus","body","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","onClick","size","position","bottom","spacing","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","ScrollToTopButton","Fab","aria-label","createTodoItem","Action","closeCreateTodoDialog","titleEl","useRef","descriptionEl","handleClose","handleSubmit","current","value","Dialog","open","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","inputRef","margin","placeholder","onSubmit","DialogActions","flexGrow","marginLeft","marginRight","breakpoints","up","appBar","paddingLeft","paddingRight","toolbar","marginTop","marginBottom","fetchTodoItems","length","useEffect","AppBar","Toolbar","Grid","container","key","item","store","createStore","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.309d4d88.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core'\n\n// Mostly using the default theme without personalisation.\n// Any personalisation will be added inside the object passed to `createMuiTheme`.\nconst theme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      background: {\n        default: '#F0F0F0',\n      },\n    },\n    typography: {\n      fontFamily: 'Avenir',\n      h5: {\n        fontWeight: 600,\n      },\n    },\n    overrides: {\n      MuiButton: {\n        contained: {\n          boxShadow: 'none',\n          '&:hover': {\n            boxShadow: 'none',\n          },\n        },\n        label: {\n          fontWeight: 600,\n          textTransform: 'none',\n        },\n      },\n      MuiCard: {\n        root: {\n          boxShadow: '0 0 10px gray',\n        },\n      },\n    },\n  }),\n)\n\nexport default theme\n","import * as ActionTypes from '../actions/types'\n\nconst initialState = {\n  openCreateTodoDialog: false,\n}\n\nexport default function modals(state = initialState, action) {\n  let nextState = {}\n  switch (action.type) {\n    case ActionTypes.openCreateTodoDialog:\n      nextState = {\n        openCreateTodoDialog: true,\n      }\n      break\n    case ActionTypes.closeCreateTodoDialog:\n      nextState = {\n        openCreateTodoDialog: false,\n      }\n      break\n    default:\n      nextState = {}\n  }\n  return { ...state, ...nextState }\n}\n","import * as ActionTypes from '../actions/types'\n\nconst initialState = {\n  todos: [],\n}\n\nexport default function todos(state = initialState, action) {\n  let nextState = {}\n  switch (action.type) {\n    case ActionTypes.getTodoItems:\n      nextState = {\n        todos: action.payload,\n      }\n      break\n    case ActionTypes.createTodoItem: {\n      const createdTodo = {\n        id: new Date().getTime(),\n        title: action.payload.title,\n        description: action.payload.description,\n        done: false,\n      }\n      const modifiedTodos = state.todos.slice()\n      modifiedTodos.push(createdTodo)\n      nextState = {\n        todos: modifiedTodos,\n      }\n      break\n    }\n    case ActionTypes.deleteTodoItem: {\n      const modifiedTodos = state.todos.filter(\n        (todo) => todo.id !== action.payload.id,\n      )\n      nextState = {\n        todos: modifiedTodos,\n      }\n      break\n    }\n    case ActionTypes.toggleTodoItemStatus: {\n      const modifiedTodos = state.todos.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return { ...todo, done: !todo.done }\n        }\n        return todo\n      })\n      nextState = {\n        todos: modifiedTodos,\n      }\n      break\n    }\n    default: {\n      nextState = {}\n    }\n  }\n  return { ...state, ...nextState }\n}\n","import { combineReducers } from 'redux'\nimport modals from './modals'\nimport todos from './todos'\n\nconst reducer = combineReducers({ modals, todos })\n\nexport default reducer\n","// Modal controls.\nexport const openCreateTodoDialog = 'OPEN_CREATE_TODO_DIALOG'\nexport const closeCreateTodoDialog = 'CLOSE_CREATE_TODO_DIALOG'\n\n// User actions.\nexport const getTodoItems = 'GET_TODO_ITEMS'\nexport const createTodoItem = 'CREATE_TODO_ITEM'\nexport const deleteTodoItem = 'DELETE_TODO_ITEM'\nexport const toggleTodoItemStatus = 'TOGGLE_TODO_ITEM_STATUS'\n","import firebase from 'firebase'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyCD7Ysa5TF_Sn6RdPOsSUl5VvjSDVO9n-s',\n  authDomain: 'todoapp-23c28.firebaseapp.com',\n  databaseURL: 'https://todoapp-23c28.firebaseio.com',\n  projectId: 'todoapp-23c28',\n  storageBucket: 'todoapp-23c28.appspot.com',\n  messagingSenderId: '1077121620227',\n  appId: '1:1077121620227:web:2befc9622a18f050b97136',\n  measurementId: 'G-R09HBMG3EX',\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nexport default firebase\n","import firebase from './firebase'\n\nexport default (function () {\n  const _db = firebase.firestore()\n  const _ref = _db.collection('todos')\n\n  async function getTodos() {\n    const todos = []\n    await _ref.get().then((snapshot) =>\n      snapshot.forEach((doc) => {\n        const todo = { id: doc.id, ...doc.data() }\n        todos.push(todo)\n      }),\n    )\n    return todos\n  }\n\n  async function addTodo(todo) {\n    const _id = todo.id.toString()\n    await _ref.doc(_id).set({\n      title: todo.title,\n      description: todo.description,\n      done: todo.done,\n    })\n  }\n\n  async function deleteTodoWithId(payload) {\n    const _id = payload.id.toString()\n    return await _ref.doc(_id).delete()\n  }\n\n  async function toggleTodoStatusWithId(id) {\n    const _id = id.toString()\n    const doc = await _ref.doc(_id).get()\n    const currentStatus = doc['done']\n    await _ref.doc(_id).update({\n      done: !currentStatus,\n    })\n  }\n\n  return {\n    getTodos,\n    addTodo,\n    deleteTodoWithId,\n    toggleTodoStatusWithId,\n  }\n})()\n","import * as ActionTypes from './types'\nimport database from '../util/database'\n\nconst todoPlaceholder = {\n  id: new Date().getTime(),\n  title: 'Create your first todo',\n  description:\n    'Create your first todo by clicking on the button located on the top-right.',\n  done: false,\n}\n\n// Opens the create todo dialog.\nexport function openCreateTodoDialog() {\n  return {\n    type: ActionTypes.openCreateTodoDialog,\n  }\n}\n\n// Closes the create todo dialog.\nexport function closeCreateTodoDialog() {\n  return {\n    type: ActionTypes.closeCreateTodoDialog,\n  }\n}\n\nexport function fetchTodoItems() {\n  return async function (dispatch) {\n    const payload = await database.getTodos()\n    if (payload.length === 0) {\n      await database.addTodo(todoPlaceholder)\n      payload.push(todoPlaceholder)\n    }\n    return dispatch({\n      type: ActionTypes.getTodoItems,\n      payload,\n    })\n  }\n}\n\n// Creates a todo item using the current inputs.\nexport function createTodoItem(payload) {\n  return async function (dispatch) {\n    await database.addTodo(payload)\n    return dispatch({\n      type: ActionTypes.createTodoItem,\n      payload,\n    })\n  }\n}\n\n// Deletes the described todo item.\nexport function deleteTodoItem(payload) {\n  return async function (dispatch) {\n    await database.deleteTodoWithId(payload)\n    return dispatch({\n      type: ActionTypes.deleteTodoItem,\n      payload,\n    })\n  }\n}\n\n// Toggles the done and to-be-done status of a todo item.\nexport function toggleTodoItemStatus(payload) {\n  return async function (dispatch) {\n    await database.toggleTodoStatusWithId(payload.id)\n    return dispatch({\n      type: ActionTypes.toggleTodoItemStatus,\n      payload,\n    })\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core'\n\nimport * as Actions from '../actions'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      opacity: (props) => (props.done ? 0.35 : 1),\n      width: 345,\n      maxWidth: '100%',\n    },\n  }),\n)\n\nconst mapDispatch = (dispatch) => ({\n  deleteTodoItem: (payload) => {\n    dispatch(Actions.deleteTodoItem(payload))\n  },\n  toggleTodoItemStatus: (payload) => {\n    dispatch(Actions.toggleTodoItemStatus(payload))\n  },\n})\n\nconst TodoCard = ({\n  deleteTodoItem,\n  toggleTodoItemStatus,\n  id,\n  title,\n  body,\n  done,\n}) => {\n  const classes = useStyles({ done })\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={() => toggleTodoItemStatus({ id })}\n          size=\"small\"\n          color=\"primary\"\n        >\n          {done ? 'Done' : 'Mark as done'}\n        </Button>\n        <Button\n          onClick={() => deleteTodoItem({ id })}\n          size=\"small\"\n          color=\"secondary\"\n        >\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nTodoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n}\n\nexport default connect(null, mapDispatch)(TodoCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Fab from '@material-ui/core/Fab'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport Zoom from '@material-ui/core/Zoom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nfunction ScrollTop(props) {\n  const { children, window } = props\n  const classes = useStyles()\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  })\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor',\n    )\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n  }\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  )\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n}\n\nconst ScrollToTopButton = (props) => {\n  return (\n    <ScrollTop {...props}>\n      <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll to top\">\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </ScrollTop>\n  )\n}\n\nexport default ScrollToTopButton\n","import React, { useRef } from 'react'\nimport { connect } from 'react-redux'\nimport * as Action from '../actions'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core'\n\nconst mapState = (state) => ({\n  openCreateTodoDialog: state.modals.openCreateTodoDialog,\n})\n\nconst mapDispatch = (dispatch) => ({\n  createTodoItem: (payload) => {\n    dispatch(Action.createTodoItem(payload))\n  },\n  closeCreateTodoDialog: () => {\n    dispatch(Action.closeCreateTodoDialog())\n  },\n})\n\nconst CreateTodoDialog = ({\n  createTodoItem,\n  openCreateTodoDialog,\n  closeCreateTodoDialog,\n}) => {\n  const titleEl = useRef(null)\n  const descriptionEl = useRef(null)\n\n  const handleClose = closeCreateTodoDialog\n\n  const handleSubmit = () => {\n    const todo = {\n      id: new Date().getTime(),\n      title: titleEl.current.value\n        ? titleEl.current.value\n        : 'The nameless todo',\n      description: descriptionEl.current.value\n        ? descriptionEl.current.value\n        : 'This todo item does not have a body.',\n      done: false,\n    }\n    createTodoItem({ ...todo })\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={openCreateTodoDialog}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"sm\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a new Todo item</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Title</DialogContentText>\n          <TextField\n            autoFocus\n            inputRef={titleEl}\n            margin=\"dense\"\n            id=\"title\"\n            placeholder=\"Title of your todo item\"\n            onSubmit={handleSubmit}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogContent>\n          <DialogContentText>Description</DialogContentText>\n          <TextField\n            inputRef={descriptionEl}\n            margin=\"dense\"\n            id=\"body\"\n            placeholder=\"Describe your todo item\"\n            onSubmit={handleSubmit}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(CreateTodoDialog)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n  createStyles,\n  makeStyles,\n  Grid,\n} from '@material-ui/core'\nimport TodoCard from './TodoCard'\n\nimport * as Actions from '../actions'\nimport ScrollToTopButton from './ScrollToTopButton'\nimport CreateTodoDialog from './CreateTodoDialog'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4),\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(6),\n        marginRight: theme.spacing(6),\n      },\n      [theme.breakpoints.up('md')]: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(8),\n      },\n    },\n    appBar: {\n      boxShadow: 'none',\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n    toolbar: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n    title: {\n      flexGrow: 1,\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    body: {},\n  }),\n)\n\nconst mapState = (state) => ({\n  todos: state.todos.todos,\n})\n\nconst mapDispatch = (dispatch) => ({\n  openCreateTodoDialog: () => {\n    dispatch(Actions.openCreateTodoDialog())\n  },\n  fetchTodoItems: () => {\n    dispatch(Actions.fetchTodoItems())\n  },\n})\n\nconst App = ({ openCreateTodoDialog, fetchTodoItems, todos }) => {\n  // Used to control our create todo modal.\n  const classes = useStyles()\n\n  useEffect(() => {\n    fetchTodoItems()\n  }, [fetchTodoItems])\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar\n          className={classes.appBar}\n          position=\"static\"\n          color=\"transparent\"\n        >\n          <Toolbar id=\"back-to-top-anchor\" className={classes.toolbar}>\n            <Typography variant=\"h5\" className={classes.title}>\n              Todo App\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={openCreateTodoDialog}\n              color=\"primary\"\n              size=\"large\"\n            >\n              Create Todo\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <ScrollToTopButton />\n        <Grid container spacing={4}>\n          {todos.map((todo) => (\n            <Grid key={todo.id} item>\n              <TodoCard\n                key={todo.id}\n                id={todo.id}\n                title={todo.title}\n                body={todo.description}\n                done={todo.done}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      {/* Relevant modals. */}\n      <CreateTodoDialog />\n    </>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport theme from './theme'\nimport reducer from './reducers'\nimport App from './components/App'\n\ndocument.title = 'Todo App'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}