{"version":3,"sources":["theme.js","reducers/modals.js","reducers/todos.js","reducers/index.js","actions/types.js","components/TodoCard.jsx","actions/index.js","components/ScrollToTopButton.jsx","components/CreateTodoDialog.jsx","components/App.jsx","index.jsx"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","background","default","typography","fontFamily","h5","fontWeight","overrides","MuiButton","contained","boxShadow","label","textTransform","MuiCard","root","initialState","openCreateTodoDialog","todos","id","Date","getTime","title","description","done","reducer","combineReducers","modals","state","action","nextState","type","createdTodo","payload","modifiedTodos","slice","push","filter","todo","map","useStyles","makeStyles","createStyles","opacity","props","width","maxWidth","connect","dispatch","deleteTodoItem","Actions","toggleTodoItemStatus","body","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","onClick","size","position","bottom","spacing","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","ScrollToTopButton","Fab","aria-label","createTodoItem","Action","closeCreateTodoDialog","titleEl","useRef","descriptionEl","handleClose","handleSubmit","current","value","Dialog","open","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","inputRef","margin","placeholder","onSubmit","DialogActions","flexGrow","marginLeft","marginRight","breakpoints","up","appBar","paddingLeft","paddingRight","toolbar","marginTop","marginBottom","useEffect","AppBar","Toolbar","Grid","container","key","item","store","createStore","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.0a57477e.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core'\n\n// Mostly using the default theme without personalisation.\n// Any personalisation will be added inside the object passed to `createMuiTheme`.\nconst theme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      background: {\n        default: '#F0F0F0',\n      },\n    },\n    typography: {\n      fontFamily: 'Avenir',\n      h5: {\n        fontWeight: 600,\n      },\n    },\n    overrides: {\n      MuiButton: {\n        contained: {\n          boxShadow: 'none',\n          '&:hover': {\n            boxShadow: 'none',\n          },\n        },\n        label: {\n          fontWeight: 600,\n          textTransform: 'none',\n        },\n      },\n      MuiCard: {\n        root: {\n          boxShadow: '0 0 10px gray',\n        },\n      },\n    },\n  }),\n)\n\nexport default theme\n","import * as ActionTypes from '../actions/types'\n\nconst initialState = {\n  openCreateTodoDialog: false,\n}\n\nexport default function modals(state = initialState, action) {\n  let nextState = {}\n  switch (action.type) {\n    case ActionTypes.openCreateTodoDialog:\n      nextState = {\n        openCreateTodoDialog: true,\n      }\n      break\n    case ActionTypes.closeCreateTodoDialog:\n      nextState = {\n        openCreateTodoDialog: false,\n      }\n      break\n    default:\n      nextState = {}\n  }\n  return { ...state, ...nextState }\n}\n","import * as ActionTypes from '../actions/types'\n\nconst initialState = {\n  todos: [\n    {\n      id: new Date().getTime(),\n      title: 'Create your first todo',\n      description:\n        'Create your first todo by clicking on the button located on the top-right.',\n      done: false,\n    },\n  ],\n}\n\nexport default function todos(state = initialState, action) {\n  let nextState = {}\n  switch (action.type) {\n    case ActionTypes.createTodoItem: {\n      const createdTodo = {\n        id: new Date().getTime(),\n        title: action.payload.title,\n        description: action.payload.description,\n        done: false,\n      }\n      const modifiedTodos = state.todos.slice()\n      modifiedTodos.push(createdTodo)\n      nextState = {\n        todos: modifiedTodos,\n      }\n      break\n    }\n    case ActionTypes.deleteTodoItem: {\n      const modifiedTodos = state.todos.filter(\n        (todo) => todo.id !== action.payload.id,\n      )\n      nextState = {\n        todos: modifiedTodos,\n      }\n      break\n    }\n    case ActionTypes.toggleTodoItemStatus: {\n      const modifiedTodos = state.todos.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return { ...todo, done: !todo.done }\n        }\n        return todo\n      })\n      nextState = {\n        todos: modifiedTodos,\n      }\n      break\n    }\n    default: {\n      nextState = {}\n    }\n  }\n  return { ...state, ...nextState }\n}\n","import { combineReducers } from 'redux'\nimport modals from './modals'\nimport todos from './todos'\n\nconst reducer = combineReducers({ modals, todos })\n\nexport default reducer\n","// Modal controls.\nexport const openCreateTodoDialog = 'OPEN_CREATE_TODO_DIALOG'\nexport const closeCreateTodoDialog = 'CLOSE_CREATE_TODO_DIALOG'\n\n// User actions.\nexport const createTodoItem = 'CREATE_TODO_ITEM'\nexport const deleteTodoItem = 'DELETE_TODO_ITEM'\nexport const toggleTodoItemStatus = 'TOGGLE_TODO_ITEM_STATUS'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core'\n\nimport * as Actions from '../actions'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      opacity: (props) => (props.done ? 0.35 : 1),\n      width: 345,\n      maxWidth: '100%',\n    },\n  }),\n)\n\nconst mapDispatch = (dispatch) => ({\n  deleteTodoItem: (payload) => {\n    dispatch(Actions.deleteTodoItem(payload))\n  },\n  toggleTodoItemStatus: (payload) => {\n    dispatch(Actions.toggleTodoItemStatus(payload))\n  },\n})\n\nconst TodoCard = ({\n  deleteTodoItem,\n  toggleTodoItemStatus,\n  id,\n  title,\n  body,\n  done,\n}) => {\n  const classes = useStyles({ done })\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={() => toggleTodoItemStatus({ id })}\n          size=\"small\"\n          color=\"primary\"\n        >\n          {done ? 'Done' : 'Mark as done'}\n        </Button>\n        <Button\n          onClick={() => deleteTodoItem({ id })}\n          size=\"small\"\n          color=\"secondary\"\n        >\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nTodoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n}\n\nexport default connect(null, mapDispatch)(TodoCard)\n","import * as ActionTypes from './types'\n\n// Opens the create todo dialog.\nexport function openCreateTodoDialog() {\n  return {\n    type: ActionTypes.openCreateTodoDialog,\n  }\n}\n\n// Closes the create todo dialog.\nexport function closeCreateTodoDialog() {\n  return {\n    type: ActionTypes.closeCreateTodoDialog,\n  }\n}\n\n// Creates a todo item using the current inputs.\nexport function createTodoItem(payload) {\n  return {\n    type: ActionTypes.createTodoItem,\n    payload,\n  }\n}\n\n// Deletes the described todo item.\nexport function deleteTodoItem(payload) {\n  return {\n    type: ActionTypes.deleteTodoItem,\n    payload,\n  }\n}\n\n// Toggles the done and to-be-done status of a todo item.\nexport function toggleTodoItemStatus(payload) {\n  return {\n    type: ActionTypes.toggleTodoItemStatus,\n    payload,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Fab from '@material-ui/core/Fab'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport Zoom from '@material-ui/core/Zoom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nfunction ScrollTop(props) {\n  const { children, window } = props\n  const classes = useStyles()\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  })\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor',\n    )\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n  }\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  )\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n}\n\nconst ScrollToTopButton = (props) => {\n  return (\n    <ScrollTop {...props}>\n      <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll to top\">\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </ScrollTop>\n  )\n}\n\nexport default ScrollToTopButton\n","import React, { useRef } from 'react'\nimport { connect } from 'react-redux'\nimport * as Action from '../actions'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core'\n\nconst mapState = (state) => ({\n  openCreateTodoDialog: state.modals.openCreateTodoDialog,\n})\n\nconst mapDispatch = (dispatch) => ({\n  createTodoItem: (payload) => {\n    dispatch(Action.createTodoItem(payload))\n  },\n  closeCreateTodoDialog: () => {\n    dispatch(Action.closeCreateTodoDialog())\n  },\n})\n\nconst CreateTodoDialog = ({\n  createTodoItem,\n  openCreateTodoDialog,\n  closeCreateTodoDialog,\n}) => {\n  const titleEl = useRef(null)\n  const descriptionEl = useRef(null)\n\n  const handleClose = closeCreateTodoDialog\n\n  const handleSubmit = () => {\n    const todo = {\n      id: new Date().getTime(),\n      title: titleEl.current.value\n        ? titleEl.current.value\n        : 'The nameless todo',\n      description: descriptionEl.current.value\n        ? descriptionEl.current.value\n        : 'This todo item does not have a body.',\n      done: false,\n    }\n    createTodoItem({ ...todo })\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={openCreateTodoDialog}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"sm\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a new Todo item</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Title</DialogContentText>\n          <TextField\n            autoFocus\n            inputRef={titleEl}\n            margin=\"dense\"\n            id=\"title\"\n            placeholder=\"Title of your todo item\"\n            onSubmit={handleSubmit}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogContent>\n          <DialogContentText>Description</DialogContentText>\n          <TextField\n            inputRef={descriptionEl}\n            margin=\"dense\"\n            id=\"body\"\n            placeholder=\"Describe your todo item\"\n            onSubmit={handleSubmit}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(CreateTodoDialog)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n  createStyles,\n  makeStyles,\n  Grid,\n} from '@material-ui/core'\nimport TodoCard from './TodoCard'\n\nimport * as Actions from '../actions'\nimport ScrollToTopButton from './ScrollToTopButton'\nimport CreateTodoDialog from './CreateTodoDialog'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4),\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(6),\n        marginRight: theme.spacing(6),\n      },\n      [theme.breakpoints.up('md')]: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(8),\n      },\n    },\n    appBar: {\n      boxShadow: 'none',\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n    toolbar: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n    title: {\n      flexGrow: 1,\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    body: {},\n  }),\n)\n\nconst mapState = (state) => ({\n  todos: state.todos.todos,\n})\n\nconst mapDispatch = (dispatch) => ({\n  openCreateTodoDialog: () => {\n    dispatch(Actions.openCreateTodoDialog())\n  },\n})\n\nconst App = ({ openCreateTodoDialog, todos }) => {\n  // Used to control our create todo modal.\n  const classes = useStyles()\n\n  useEffect(() => {\n    // Any updates to the backend should come here.\n    // Backend is not implemented in this todo version.\n  }, [])\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar\n          className={classes.appBar}\n          position=\"static\"\n          color=\"transparent\"\n        >\n          <Toolbar id=\"back-to-top-anchor\" className={classes.toolbar}>\n            <Typography variant=\"h5\" className={classes.title}>\n              Todo App\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={openCreateTodoDialog}\n              color=\"primary\"\n              size=\"large\"\n            >\n              Create Todo\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <ScrollToTopButton />\n        <Grid container spacing={4}>\n          {todos.map((todo) => (\n            <Grid key={todo.id} item>\n              <TodoCard\n                key={todo.id}\n                id={todo.id}\n                title={todo.title}\n                body={todo.description}\n                done={todo.done}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      {/* Relevant modals. */}\n      <CreateTodoDialog />\n    </>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport theme from './theme'\nimport reducer from './reducers'\nimport App from './components/App'\n\ndocument.title = 'Todo App'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}